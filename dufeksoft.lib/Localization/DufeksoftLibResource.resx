<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContactRequestCultureId" xml:space="preserve">
    <value />
  </data>
  <data name="ContactRequestSubject" xml:space="preserve">
    <value>Your message: {0}</value>
  </data>
  <data name="ContactRequestTemplate" xml:space="preserve">
    <value>ContactSendSuccess</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Invalid e-mail</value>
  </data>
  <data name="LabelConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="LabelEmail" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="LabelErrorInfo" xml:space="preserve">
    <value>Error sending the message. Correct errors and try again.</value>
  </data>
  <data name="LabelHeader" xml:space="preserve">
    <value>Write us a message</value>
  </data>
  <data name="LabelMsgSent" xml:space="preserve">
    <value>Your message has been sent.</value>
  </data>
  <data name="LabelMsgText" xml:space="preserve">
    <value>Write your message here</value>
  </data>
  <data name="LabelName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LabelPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="LabelSeeYouSoon" xml:space="preserve">
    <value>Will contact You as soon as possible.</value>
  </data>
  <data name="LabelSend" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="LabelSubject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="LabelThankYou" xml:space="preserve">
    <value>Thank You for contacting us.</value>
  </data>
  <data name="RequiredEmail" xml:space="preserve">
    <value>E-mail is required</value>
  </data>
  <data name="RequiredMsgText" xml:space="preserve">
    <value>Message text is required</value>
  </data>
  <data name="RequiredName" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="RequiredSubject" xml:space="preserve">
    <value>Subject is required</value>
  </data>
  <data name="TatraCardPayLabelAmount" xml:space="preserve">
    <value>Amount in € to pay</value>
  </data>
  <data name="TatraCardPayLabelName" xml:space="preserve">
    <value>Name and surname</value>
  </data>
  <data name="TatraCardPayLabelVs" xml:space="preserve">
    <value>Invoice number</value>
  </data>
  <data name="TatraCardPayRequiredAmount" xml:space="preserve">
    <value>Amount can't be empty. Enter an amount to pay in €.</value>
  </data>
  <data name="TatraCardPayRequiredName" xml:space="preserve">
    <value>Name can't be empty.</value>
  </data>
  <data name="TatraCardPayRequiredVs" xml:space="preserve">
    <value>Invoice number can't be empty.</value>
  </data>
  <data name="TatraCardPayWrongAmount" xml:space="preserve">
    <value>Only numeric value with two decimal places is allowed.</value>
  </data>
  <data name="TatraCardPayWrongName" xml:space="preserve">
    <value>Allowed characters are 0-9, a-z,
A-Z, space, dot,
'-', '_', '@'</value>
  </data>
  <data name="TatraCardPayWrongVs" xml:space="preserve">
    <value>Only numeric character are allowed.</value>
  </data>
  <data name="TbCardPayAdvancePayment" xml:space="preserve">
    <value>Advanced payment</value>
  </data>
  <data name="TbCardPayBtnSend" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="TbCardPayErrTitle" xml:space="preserve">
    <value>Correct errors and try again.</value>
  </data>
  <data name="TbCardPayFormTitle" xml:space="preserve">
    <value>Payment form</value>
  </data>
  <data name="TbCardPayLang" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="TbCardPayPaymentFailed" xml:space="preserve">
    <value>The payment failed.</value>
  </data>
  <data name="TbCardPayPaymentNoSecInfo" xml:space="preserve">
    <value>Missing security token in response. Please contact us.</value>
  </data>
  <data name="TbCardPayPaymentOk" xml:space="preserve">
    <value>The payment processed successfully.</value>
  </data>
  <data name="TbCardPayPaymentTryLater" xml:space="preserve">
    <value>Please try again later or contact us.</value>
  </data>
  <data name="TbCardPayPaymentWrongSecInfo" xml:space="preserve">
    <value>Security check error. Please contact us.</value>
  </data>
  <data name="TbCardPayRedirectingToGateway" xml:space="preserve">
    <value>Redirect to payment gateway. Please wait ...</value>
  </data>
  <data name="TbCardPayRegularPayment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="TbCardPaySecureInfo" xml:space="preserve">
    <value>To make a safe payment you will be redirected to the Tatrabanka bank payment gate where we have our bank account. When the payment finishes you will be redirected back to oktrip.sk web pages.</value>
  </data>
  <data name="TbCardPaySubTitle" xml:space="preserve">
    <value>Please fill the form below to make a payment.</value>
  </data>
  <data name="TbCardPayTitle" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="VubAdvancePayment" xml:space="preserve">
    <value>Advanced payment</value>
  </data>
  <data name="VubBtnSend" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="VubErrTitle" xml:space="preserve">
    <value>Correct errors and try again.</value>
  </data>
  <data name="VubFormTitle" xml:space="preserve">
    <value>Payment form</value>
  </data>
  <data name="VubLabelAmount" xml:space="preserve">
    <value>Amount in € to pay</value>
  </data>
  <data name="VubLabelOid" xml:space="preserve">
    <value>Invoice number</value>
  </data>
  <data name="VubLang" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="VubRedirectingToGateway" xml:space="preserve">
    <value>Redirect to payment gateway. Please wait ...</value>
  </data>
  <data name="VubRegularPayment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="VubRequiredAmount" xml:space="preserve">
    <value>Amount can't be empty. Enter an amount to pay in €.</value>
  </data>
  <data name="VubRequiredOid" xml:space="preserve">
    <value>Invoice number can't be empty.</value>
  </data>
  <data name="VubSecureInfo" xml:space="preserve">
    <value>To make a safe payment you will be redirected to the VUB bank payment gate where we have our bank account. When the payment finishes you will be redirected back to oktrip.sk web pages.</value>
  </data>
  <data name="VubSubTitle" xml:space="preserve">
    <value>Please fill the form below to make a payment.</value>
  </data>
  <data name="VubTitle" xml:space="preserve">
    <value>Payment</value>
  </data>
</root>